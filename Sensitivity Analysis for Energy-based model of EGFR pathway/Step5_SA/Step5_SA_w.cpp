#include "amici/symbolic_functions.h"
#include "amici/defines.h"
#include "sundials/sundials_types.h"

#include <gsl/gsl-lite.hpp>
#include <array>
#include <algorithm>

#include "Step5_SA_x.h"
#include "Step5_SA_p.h"
#include "Step5_SA_k.h"
#include "Step5_SA_w.h"

namespace amici {
namespace model_Step5_SA {

void w_Step5_SA(realtype *w, const realtype t, const realtype *x, const realtype *p, const realtype *k, const realtype *h, const realtype *tcl){
    ShPtotal = S16 + S22 + S29 + S30 + S33;  // w[0]
    PLCg_P = S28;  // w[1]
    PLCgPtotal = S15 + S28;  // w[2]
    Grb2Shctotal = S100 + S101 + S102 + S103 + S104 + S105 + S106 + S107 + S30 + S31 + S34 + S35 + S36 + S37 + S40 + S41 + S44 + S45 + S46 + S47 + S50 + S51 + S52 + S53 + S54 + S55 + S56 + S57 + S58 + S59 + S62 + S63 + S64 + S65 + S66 + S67 + S68 + S69 + S74 + S75 + S76 + S77 + S78 + S79 + S96 + S97 + S98 + S99;  // w[3]
    EGFRPtotal = 2*S10 + 2*S11 + 2*S12 + 2*S13 + 2*S14 + 2*S15 + 2*S40 + 4*S41 + 2*S45 + 2*S47 + 2*S49 + 2*S61 + 2*S75 + 2*S78 + 2*S79 + 2*S9 + 2*S91 + 2*S94 + 2*S95;  // w[4]
    Shc_P = S22;  // w[5]
    EGF_EGFR2_P = S10 + S100 + S101 + S102 + S103 + S104 + S105 + S106 + S107 + S108 + S109 + S11 + S110 + S111 + S112 + S113 + S114 + S115 + S116 + S117 + S118 + S119 + S12 + S14 + S15 + S16 + S17 + S18 + S19 + S20 + S21 + S24 + S25 + S26 + S27 + S29 + S33 + S34 + S35 + S40 + S41 + S42 + S43 + S44 + S45 + S46 + S47 + S48 + S49 + S50 + S51 + S52 + S53 + S54 + S55 + S56 + S57 + S58 + S59 + S60 + S61 + S62 + S63 + S64 + S65 + S66 + S67 + S68 + S69 + S70 + S71 + S72 + S73 + S74 + S75 + S76 + S77 + S78 + S79 + S80 + S81 + S82 + S83 + S84 + S85 + S86 + S87 + S88 + S89 + S9 + S90 + S91 + S92 + S93 + S94 + S95 + S96 + S97 + S98 + S99;  // w[6]
    Grb2EGFRtotal = S11 + S14 + S40 + 2*S41 + S45 + S47 + S49 + S61 + S75 + S78 + S79 + S91 + S94 + S95;  // w[7]
    fRate3 = r4_V4/(EGF_EGFR2_P + r4_K4);  // w[8]
    fRate7 = r8_V8/(PLCg_P + r8_K8);  // w[9]
    fRate15 = r16_V16/(Shc_P + r16_K16);  // w[10]
    flux_R1 = S1*S2*std::exp(-Ea_LR - Gf_LR*phi);  // w[11]
    flux_R2 = S7*std::exp(-Ea_LR + Gf_LR*(1 - phi));  // w[12]
    flux_R3 = 0.5*std::pow(S7, 2)*std::exp(-Ea_RR - phi*(-2*Gf_LR + 2*Gf_LRR + Gf_LRRL + Gf_RR));  // w[13]
    flux_R4 = 2*S8*std::exp(-Ea_RR - (1 - phi)*(2*Gf_LR - 2*Gf_LRR - Gf_LRRL - Gf_RR));  // w[14]
    flux_R5 = 2*S8*r3_k3f;  // w[15]
    flux_R6 = S9*r3_k3b;  // w[16]
    flux_R7 = S9*fRate3;  // w[17]
    flux_R8 = S3*S9*std::exp(-Ea_RSh - Gf_RSh*phi);  // w[18]
    flux_R9 = S4*S9*std::exp(-Ea_RG - Gf_RG*phi);  // w[19]
    flux_R10 = S6*S9*std::exp(-Ea_RPL - Gf_RPL*phi);  // w[20]
    flux_R11 = S10*std::exp(-Ea_RSh + Gf_RSh*(1 - phi));  // w[21]
    flux_R12 = S10*r14_k14f;  // w[22]
    flux_R13 = S11*std::exp(-Ea_RG + Gf_RG*(1 - phi));  // w[23]
    flux_R14 = S11*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[24]
    flux_R15 = S12*std::exp(-Ea_RPL + Gf_RPL*(1 - phi));  // w[25]
    flux_R16 = S12*r6_k6f;  // w[26]
    flux_R17 = S12*S3*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti1));  // w[27]
    flux_R18 = S10*S6*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[28]
    flux_R19 = S10*S4*std::exp(-Ea_RG - phi*(Gf_RG + Gf_Rmulti2));  // w[29]
    flux_R20 = S11*S3*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[30]
    flux_R21 = S12*S4*std::exp(-Ea_RG - phi*(Gf_RG + Gf_Rmulti3));  // w[31]
    flux_R22 = S11*S6*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[32]
    flux_R23 = S13*r14_k14b;  // w[33]
    flux_R24 = S13*r15_k15f;  // w[34]
    flux_R25 = S14*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS));  // w[35]
    flux_R26 = S14*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[36]
    flux_R27 = S18*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[37]
    flux_R28 = S19*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[38]
    flux_R29 = S20*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[39]
    flux_R30 = S21*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[40]
    flux_R31 = S15*r6_k6b;  // w[41]
    flux_R32 = S15*r7_k7f;  // w[42]
    flux_R33 = S16*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti1));  // w[43]
    flux_R34 = S17*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[44]
    flux_R35 = S18*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_Rmulti2));  // w[45]
    flux_R36 = S19*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_Rmulti2));  // w[46]
    flux_R37 = S14*S3*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[47]
    flux_R38 = S19*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[48]
    flux_R39 = S20*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_Rmulti3));  // w[49]
    flux_R40 = S14*S6*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[50]
    flux_R41 = S21*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[51]
    flux_R42 = S22*S9*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP));  // w[52]
    flux_R43 = S29*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP));  // w[53]
    flux_R44 = S22*S9*r15_k15b;  // w[54]
    flux_R45 = S22*fRate15;  // w[55]
    flux_R46 = S23*S9*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS));  // w[56]
    flux_R47 = S24*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[57]
    flux_R48 = S25*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[58]
    flux_R49 = S26*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[59]
    flux_R50 = S27*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[60]
    flux_R51 = S22*S4*std::exp(-Ea_ShG - Gf_ShG*phi);  // w[61]
    flux_R52 = S22*S23*std::exp(-Ea_ShG - phi*(Gf_ShG + Gf_ShGS));  // w[62]
    flux_R53 = S28*S9*r7_k7b;  // w[63]
    flux_R54 = S28*fRate7;  // w[64]
    flux_R55 = S28*r25_k25f;  // w[65]
    flux_R56 = S29*S6*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[66]
    flux_R57 = S10*S23*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[67]
    flux_R58 = S29*S4*std::exp(-Ea_RG - phi*(Gf_RG + Gf_Rmulti2));  // w[68]
    flux_R59 = S23*S29*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[69]
    flux_R60 = S24*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[70]
    flux_R61 = S25*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[71]
    flux_R62 = S25*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[72]
    flux_R63 = S12*S23*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS + Gf_Rmulti3));  // w[73]
    flux_R64 = S26*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS + Gf_Rmulti3));  // w[74]
    flux_R65 = S27*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[75]
    flux_R66 = S30*S9*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShG + Gf_RShP));  // w[76]
    flux_R67 = S31*S9*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShG + Gf_RShP));  // w[77]
    flux_R68 = S30*S9*r15_k15b;  // w[78]
    flux_R69 = S31*S9*r15_k15b;  // w[79]
    flux_R70 = S30*fRate15;  // w[80]
    flux_R71 = S31*fRate15;  // w[81]
    flux_R72 = S30*S9*std::exp(-Ea_RG - Gf_RG*phi);  // w[82]
    flux_R73 = S31*S9*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS));  // w[83]
    flux_R74 = S30*std::exp(-Ea_ShG + Gf_ShG*(1 - phi));  // w[84]
    flux_R75 = S31*std::exp(-Ea_ShG + (1 - phi)*(Gf_ShG + Gf_ShGS));  // w[85]
    flux_R76 = S32*r25_k25b;  // w[86]
    flux_R77 = S33*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[87]
    flux_R78 = S38*S9*std::exp(-Ea_RSh - Gf_RSh*phi);  // w[88]
    flux_R79 = S39*S9*std::exp(-Ea_RSh - Gf_RSh*phi);  // w[89]
    flux_R80 = S40*S9*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShG + Gf_RShP));  // w[90]
    flux_R81 = S41*S9*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShG + Gf_RShP));  // w[91]
    flux_R82 = S34*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShG + Gf_RShP));  // w[92]
    flux_R83 = S35*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShG + Gf_RShP));  // w[93]
    flux_R84 = S36*r14_k14b;  // w[94]
    flux_R85 = S37*r14_k14b;  // w[95]
    flux_R86 = S36*r15_k15f;  // w[96]
    flux_R87 = S37*r15_k15f;  // w[97]
    flux_R88 = S40*S9*r15_k15b;  // w[98]
    flux_R89 = S41*S9*r15_k15b;  // w[99]
    flux_R90 = S40*fRate15;  // w[100]
    flux_R91 = S41*fRate15;  // w[101]
    flux_R92 = S34*S9*std::exp(-Ea_RG - Gf_RG*phi);  // w[102]
    flux_R93 = S35*S9*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS));  // w[103]
    flux_R94 = S36*S9*std::exp(-Ea_RG - Gf_RG*phi);  // w[104]
    flux_R95 = S37*S9*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS));  // w[105]
    flux_R96 = S38*S9*std::exp(-Ea_RG - Gf_RG*phi);  // w[106]
    flux_R97 = S39*S9*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS));  // w[107]
    flux_R98 = S40*std::exp(-Ea_RG + Gf_RG*(1 - phi));  // w[108]
    flux_R99 = S41*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS));  // w[109]
    flux_R100 = S41*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[110]
    flux_R101 = S40*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[111]
    flux_R102 = S34*S6*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[112]
    flux_R103 = S35*S6*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[113]
    flux_R104 = S34*S4*std::exp(-Ea_RG - phi*(Gf_RG + Gf_Rmulti2));  // w[114]
    flux_R105 = S23*S34*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[115]
    flux_R106 = S35*S4*std::exp(-Ea_RG - phi*(Gf_RG + Gf_Rmulti2));  // w[116]
    flux_R107 = S23*S35*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[117]
    flux_R108 = S3*S40*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[118]
    flux_R109 = S3*S41*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[119]
    flux_R110 = S40*S6*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[120]
    flux_R111 = S41*S6*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[121]
    flux_R112 = S48*S9*std::exp(-Ea_RSh - Gf_RSh*phi);  // w[122]
    flux_R113 = S49*S9*std::exp(-Ea_RSh - Gf_RSh*phi);  // w[123]
    flux_R114 = S56*S9*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShG + Gf_RShP));  // w[124]
    flux_R115 = S57*S9*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShG + Gf_RShP));  // w[125]
    flux_R116 = S58*S9*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShG + Gf_RShP));  // w[126]
    flux_R117 = S59*S9*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShG + Gf_RShP));  // w[127]
    flux_R118 = S42*std::exp(-Ea_RSh + Gf_RSh*(1 - phi));  // w[128]
    flux_R119 = S43*std::exp(-Ea_RSh + Gf_RSh*(1 - phi));  // w[129]
    flux_R120 = S44*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShG + Gf_RShP));  // w[130]
    flux_R121 = S45*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShG + Gf_RShP));  // w[131]
    flux_R122 = S42*r14_k14f;  // w[132]
    flux_R123 = S43*r14_k14f;  // w[133]
    flux_R124 = S46*r14_k14b;  // w[134]
    flux_R125 = S47*r14_k14b;  // w[135]
    flux_R126 = S46*r15_k15f;  // w[136]
    flux_R127 = S47*r15_k15f;  // w[137]
    flux_R128 = S56*S9*r15_k15b;  // w[138]
    flux_R129 = S57*S9*r15_k15b;  // w[139]
    flux_R130 = S58*S9*r15_k15b;  // w[140]
    flux_R131 = S59*S9*r15_k15b;  // w[141]
    flux_R132 = S56*fRate15;  // w[142]
    flux_R133 = S57*fRate15;  // w[143]
    flux_R134 = S58*fRate15;  // w[144]
    flux_R135 = S59*fRate15;  // w[145]
    flux_R136 = S42*S9*std::exp(-Ea_RG - Gf_RG*phi);  // w[146]
    flux_R137 = S43*S9*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS));  // w[147]
    flux_R138 = S50*S9*std::exp(-Ea_RG - Gf_RG*phi);  // w[148]
    flux_R139 = S51*S9*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS));  // w[149]
    flux_R140 = S52*S9*std::exp(-Ea_RG - Gf_RG*phi);  // w[150]
    flux_R141 = S53*S9*std::exp(-Ea_RG - Gf_RG*phi);  // w[151]
    flux_R142 = S54*S9*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS));  // w[152]
    flux_R143 = S55*S9*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS));  // w[153]
    flux_R144 = S44*std::exp(-Ea_RG + Gf_RG*(1 - phi));  // w[154]
    flux_R145 = S45*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS));  // w[155]
    flux_R146 = S46*std::exp(-Ea_RG + Gf_RG*(1 - phi));  // w[156]
    flux_R147 = S47*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS));  // w[157]
    flux_R148 = S48*std::exp(-Ea_RG + Gf_RG*(1 - phi));  // w[158]
    flux_R149 = S49*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS));  // w[159]
    flux_R150 = S45*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[160]
    flux_R151 = S47*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[161]
    flux_R152 = S49*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[162]
    flux_R153 = S53*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[163]
    flux_R154 = S55*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[164]
    flux_R155 = S57*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[165]
    flux_R156 = S59*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[166]
    flux_R157 = S44*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[167]
    flux_R158 = S46*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[168]
    flux_R159 = S48*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[169]
    flux_R160 = S5*S52*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[170]
    flux_R161 = S5*S54*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[171]
    flux_R162 = S5*S56*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[172]
    flux_R163 = S5*S58*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[173]
    flux_R164 = S42*S6*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[174]
    flux_R165 = S43*S6*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[175]
    flux_R166 = S44*S6*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[176]
    flux_R167 = S45*S6*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[177]
    flux_R168 = S50*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[178]
    flux_R169 = S51*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[179]
    flux_R170 = S4*S42*std::exp(-Ea_RG - phi*(Gf_RG + Gf_Rmulti2));  // w[180]
    flux_R171 = S23*S42*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[181]
    flux_R172 = S4*S43*std::exp(-Ea_RG - phi*(Gf_RG + Gf_Rmulti2));  // w[182]
    flux_R173 = S23*S43*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[183]
    flux_R174 = S4*S44*std::exp(-Ea_RG - phi*(Gf_RG + Gf_Rmulti2));  // w[184]
    flux_R175 = S23*S44*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[185]
    flux_R176 = S4*S45*std::exp(-Ea_RG - phi*(Gf_RG + Gf_Rmulti2));  // w[186]
    flux_R177 = S23*S45*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[187]
    flux_R178 = S52*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_Rmulti2));  // w[188]
    flux_R179 = S53*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[189]
    flux_R180 = S54*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_Rmulti2));  // w[190]
    flux_R181 = S55*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[191]
    flux_R182 = S3*S44*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[192]
    flux_R183 = S3*S45*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[193]
    flux_R184 = S3*S46*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[194]
    flux_R185 = S3*S47*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[195]
    flux_R186 = S3*S48*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[196]
    flux_R187 = S3*S49*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[197]
    flux_R188 = S56*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[198]
    flux_R189 = S57*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[199]
    flux_R190 = S44*S6*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[200]
    flux_R191 = S45*S6*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[201]
    flux_R192 = S46*S6*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[202]
    flux_R193 = S47*S6*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[203]
    flux_R194 = S48*S6*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[204]
    flux_R195 = S49*S6*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[205]
    flux_R196 = S58*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[206]
    flux_R197 = S59*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[207]
    flux_R198 = S70*S9*std::exp(-Ea_RSh - Gf_RSh*phi);  // w[208]
    flux_R199 = S71*S9*std::exp(-Ea_RSh - Gf_RSh*phi);  // w[209]
    flux_R200 = S72*S9*std::exp(-Ea_RSh - Gf_RSh*phi);  // w[210]
    flux_R201 = S73*S9*std::exp(-Ea_RSh - Gf_RSh*phi);  // w[211]
    flux_R202 = S60*std::exp(-Ea_RSh + Gf_RSh*(1 - phi));  // w[212]
    flux_R203 = S61*std::exp(-Ea_RSh + Gf_RSh*(1 - phi));  // w[213]
    flux_R204 = S62*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShG + Gf_RShP));  // w[214]
    flux_R205 = S63*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShG + Gf_RShP));  // w[215]
    flux_R206 = S64*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShG + Gf_RShP));  // w[216]
    flux_R207 = S65*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShG + Gf_RShP));  // w[217]
    flux_R208 = S60*r14_k14f;  // w[218]
    flux_R209 = S61*r14_k14f;  // w[219]
    flux_R210 = S66*r14_k14b;  // w[220]
    flux_R211 = S67*r14_k14b;  // w[221]
    flux_R212 = S68*r14_k14b;  // w[222]
    flux_R213 = S69*r14_k14b;  // w[223]
    flux_R214 = S66*r15_k15f;  // w[224]
    flux_R215 = S67*r15_k15f;  // w[225]
    flux_R216 = S68*r15_k15f;  // w[226]
    flux_R217 = S69*r15_k15f;  // w[227]
    flux_R218 = S80*S9*std::exp(-Ea_RG - Gf_RG*phi);  // w[228]
    flux_R219 = S81*S9*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS));  // w[229]
    flux_R220 = S82*S9*std::exp(-Ea_RG - Gf_RG*phi);  // w[230]
    flux_R221 = S83*S9*std::exp(-Ea_RG - Gf_RG*phi);  // w[231]
    flux_R222 = S84*S9*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS));  // w[232]
    flux_R223 = S85*S9*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS));  // w[233]
    flux_R224 = S60*std::exp(-Ea_RG + Gf_RG*(1 - phi));  // w[234]
    flux_R225 = S61*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS));  // w[235]
    flux_R226 = S74*std::exp(-Ea_RG + Gf_RG*(1 - phi));  // w[236]
    flux_R227 = S75*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS));  // w[237]
    flux_R228 = S76*std::exp(-Ea_RG + Gf_RG*(1 - phi));  // w[238]
    flux_R229 = S77*std::exp(-Ea_RG + Gf_RG*(1 - phi));  // w[239]
    flux_R230 = S78*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS));  // w[240]
    flux_R231 = S79*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS));  // w[241]
    flux_R232 = S61*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[242]
    flux_R233 = S63*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[243]
    flux_R234 = S65*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[244]
    flux_R235 = S67*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[245]
    flux_R236 = S69*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[246]
    flux_R237 = S71*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[247]
    flux_R238 = S73*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[248]
    flux_R239 = S75*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[249]
    flux_R240 = S77*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[250]
    flux_R241 = S78*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[251]
    flux_R242 = S79*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[252]
    flux_R243 = S79*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[253]
    flux_R244 = S83*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[254]
    flux_R245 = S85*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[255]
    flux_R246 = S5*S60*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[256]
    flux_R247 = S5*S62*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[257]
    flux_R248 = S5*S64*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[258]
    flux_R249 = S5*S66*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[259]
    flux_R250 = S5*S68*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[260]
    flux_R251 = S5*S70*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[261]
    flux_R252 = S5*S72*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[262]
    flux_R253 = S5*S74*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[263]
    flux_R254 = S5*S76*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[264]
    flux_R255 = S5*S76*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[265]
    flux_R256 = S5*S77*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[266]
    flux_R257 = S5*S78*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[267]
    flux_R258 = S5*S82*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[268]
    flux_R259 = S5*S84*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[269]
    flux_R260 = S6*S60*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[270]
    flux_R261 = S6*S61*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[271]
    flux_R262 = S6*S62*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[272]
    flux_R263 = S6*S63*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[273]
    flux_R264 = S6*S64*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[274]
    flux_R265 = S6*S65*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[275]
    flux_R266 = S74*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[276]
    flux_R267 = S75*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[277]
    flux_R268 = S80*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[278]
    flux_R269 = S81*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[279]
    flux_R270 = S4*S60*std::exp(-Ea_RG - phi*(Gf_RG + Gf_Rmulti2));  // w[280]
    flux_R271 = S23*S60*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[281]
    flux_R272 = S4*S61*std::exp(-Ea_RG - phi*(Gf_RG + Gf_Rmulti2));  // w[282]
    flux_R273 = S23*S61*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[283]
    flux_R274 = S4*S62*std::exp(-Ea_RG - phi*(Gf_RG + Gf_Rmulti2));  // w[284]
    flux_R275 = S23*S62*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[285]
    flux_R276 = S4*S63*std::exp(-Ea_RG - phi*(Gf_RG + Gf_Rmulti2));  // w[286]
    flux_R277 = S23*S63*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[287]
    flux_R278 = S4*S64*std::exp(-Ea_RG - phi*(Gf_RG + Gf_Rmulti2));  // w[288]
    flux_R279 = S23*S64*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[289]
    flux_R280 = S4*S65*std::exp(-Ea_RG - phi*(Gf_RG + Gf_Rmulti2));  // w[290]
    flux_R281 = S23*S65*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[291]
    flux_R282 = S76*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_Rmulti2));  // w[292]
    flux_R283 = S77*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[293]
    flux_R284 = S78*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_Rmulti2));  // w[294]
    flux_R285 = S79*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[295]
    flux_R286 = S82*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_Rmulti2));  // w[296]
    flux_R287 = S83*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[297]
    flux_R288 = S84*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_Rmulti2));  // w[298]
    flux_R289 = S85*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[299]
    flux_R290 = S3*S60*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[300]
    flux_R291 = S3*S61*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[301]
    flux_R292 = S3*S74*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[302]
    flux_R293 = S3*S75*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[303]
    flux_R294 = S3*S76*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[304]
    flux_R295 = S3*S77*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[305]
    flux_R296 = S3*S78*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[306]
    flux_R297 = S3*S79*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[307]
    flux_R298 = S62*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[308]
    flux_R299 = S63*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[309]
    flux_R300 = S66*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[310]
    flux_R301 = S67*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[311]
    flux_R302 = S70*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[312]
    flux_R303 = S71*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[313]
    flux_R304 = S6*S60*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[314]
    flux_R305 = S6*S61*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[315]
    flux_R306 = S6*S74*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[316]
    flux_R307 = S6*S75*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[317]
    flux_R308 = S6*S76*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[318]
    flux_R309 = S6*S77*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[319]
    flux_R310 = S6*S78*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[320]
    flux_R311 = S6*S79*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[321]
    flux_R312 = S64*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[322]
    flux_R313 = S65*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[323]
    flux_R314 = S68*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[324]
    flux_R315 = S69*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[325]
    flux_R316 = S72*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[326]
    flux_R317 = S73*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[327]
    flux_R318 = S86*std::exp(-Ea_RSh + Gf_RSh*(1 - phi));  // w[328]
    flux_R319 = S87*std::exp(-Ea_RSh + Gf_RSh*(1 - phi));  // w[329]
    flux_R320 = S88*std::exp(-Ea_RSh + Gf_RSh*(1 - phi));  // w[330]
    flux_R321 = S89*std::exp(-Ea_RSh + Gf_RSh*(1 - phi));  // w[331]
    flux_R322 = S86*r14_k14f;  // w[332]
    flux_R323 = S87*r14_k14f;  // w[333]
    flux_R324 = S88*r14_k14f;  // w[334]
    flux_R325 = S89*r14_k14f;  // w[335]
    flux_R326 = S90*std::exp(-Ea_RG + Gf_RG*(1 - phi));  // w[336]
    flux_R327 = S91*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS));  // w[337]
    flux_R328 = S92*std::exp(-Ea_RG + Gf_RG*(1 - phi));  // w[338]
    flux_R329 = S93*std::exp(-Ea_RG + Gf_RG*(1 - phi));  // w[339]
    flux_R330 = S94*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS));  // w[340]
    flux_R331 = S95*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS));  // w[341]
    flux_R332 = S87*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[342]
    flux_R333 = S89*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[343]
    flux_R334 = S91*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[344]
    flux_R335 = S93*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[345]
    flux_R336 = S94*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[346]
    flux_R337 = S95*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[347]
    flux_R338 = S95*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[348]
    flux_R339 = S97*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[349]
    flux_R340 = S99*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[350]
    flux_R341 = S101*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[351]
    flux_R342 = S102*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[352]
    flux_R343 = S103*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[353]
    flux_R344 = S103*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[354]
    flux_R345 = S105*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[355]
    flux_R346 = S106*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[356]
    flux_R347 = S107*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[357]
    flux_R348 = S107*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[358]
    flux_R349 = S5*S86*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[359]
    flux_R350 = S5*S88*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[360]
    flux_R351 = S5*S90*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[361]
    flux_R352 = S5*S92*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[362]
    flux_R353 = S5*S92*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[363]
    flux_R354 = S5*S93*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[364]
    flux_R355 = S5*S94*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[365]
    flux_R356 = S5*S96*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[366]
    flux_R357 = S5*S98*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[367]
    flux_R358 = S100*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[368]
    flux_R359 = S100*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[369]
    flux_R360 = S101*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[370]
    flux_R361 = S102*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[371]
    flux_R362 = S104*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[372]
    flux_R363 = S104*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[373]
    flux_R364 = S105*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS + Gf_ShGS));  // w[374]
    flux_R365 = S106*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[375]
    flux_R366 = S6*S86*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[376]
    flux_R367 = S6*S87*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[377]
    flux_R368 = S6*S88*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[378]
    flux_R369 = S6*S89*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[379]
    flux_R370 = S90*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[380]
    flux_R371 = S91*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[381]
    flux_R372 = S96*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[382]
    flux_R373 = S97*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[383]
    flux_R374 = S98*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[384]
    flux_R375 = S99*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[385]
    flux_R376 = S4*S86*std::exp(-Ea_RG - phi*(Gf_RG + Gf_Rmulti2));  // w[386]
    flux_R377 = S23*S86*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[387]
    flux_R378 = S4*S87*std::exp(-Ea_RG - phi*(Gf_RG + Gf_Rmulti2));  // w[388]
    flux_R379 = S23*S87*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[389]
    flux_R380 = S4*S88*std::exp(-Ea_RG - phi*(Gf_RG + Gf_Rmulti2));  // w[390]
    flux_R381 = S23*S88*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[391]
    flux_R382 = S4*S89*std::exp(-Ea_RG - phi*(Gf_RG + Gf_Rmulti2));  // w[392]
    flux_R383 = S23*S89*std::exp(-Ea_RG - phi*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[393]
    flux_R384 = S92*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_Rmulti2));  // w[394]
    flux_R385 = S93*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[395]
    flux_R386 = S94*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_Rmulti2));  // w[396]
    flux_R387 = S95*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[397]
    flux_R388 = S100*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_Rmulti2));  // w[398]
    flux_R389 = S101*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[399]
    flux_R390 = S102*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_Rmulti2));  // w[400]
    flux_R391 = S103*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[401]
    flux_R392 = S104*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_Rmulti2));  // w[402]
    flux_R393 = S105*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[403]
    flux_R394 = S106*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_Rmulti2));  // w[404]
    flux_R395 = S107*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[405]
    flux_R396 = S3*S90*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[406]
    flux_R397 = S3*S91*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[407]
    flux_R398 = S3*S92*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[408]
    flux_R399 = S3*S93*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[409]
    flux_R400 = S3*S94*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[410]
    flux_R401 = S3*S95*std::exp(-Ea_RSh - phi*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[411]
    flux_R402 = S86*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[412]
    flux_R403 = S87*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[413]
    flux_R404 = S96*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[414]
    flux_R405 = S97*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[415]
    flux_R406 = S100*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[416]
    flux_R407 = S101*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[417]
    flux_R408 = S102*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[418]
    flux_R409 = S103*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[419]
    flux_R410 = S6*S90*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[420]
    flux_R411 = S6*S91*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[421]
    flux_R412 = S6*S92*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[422]
    flux_R413 = S6*S93*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[423]
    flux_R414 = S6*S94*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[424]
    flux_R415 = S6*S95*std::exp(-Ea_RPL - phi*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[425]
    flux_R416 = S88*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[426]
    flux_R417 = S89*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[427]
    flux_R418 = S98*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[428]
    flux_R419 = S99*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[429]
    flux_R420 = S104*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[430]
    flux_R421 = S105*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[431]
    flux_R422 = S106*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[432]
    flux_R423 = S107*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[433]
    flux_R424 = S109*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[434]
    flux_R425 = S111*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[435]
    flux_R426 = S113*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[436]
    flux_R427 = S114*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[437]
    flux_R428 = S115*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[438]
    flux_R429 = S115*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[439]
    flux_R430 = S117*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[440]
    flux_R431 = S118*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[441]
    flux_R432 = S119*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[442]
    flux_R433 = S119*std::exp(-Ea_GS + phi*(Gf_GS + Gf_RGS));  // w[443]
    flux_R434 = S108*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[444]
    flux_R435 = S110*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[445]
    flux_R436 = S112*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[446]
    flux_R437 = S112*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[447]
    flux_R438 = S113*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[448]
    flux_R439 = S114*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[449]
    flux_R440 = S116*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[450]
    flux_R441 = S116*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[451]
    flux_R442 = S117*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[452]
    flux_R443 = S118*S5*std::exp(-Ea_GS - (1 - phi)*(Gf_GS + Gf_RGS));  // w[453]
    flux_R444 = S108*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[454]
    flux_R445 = S109*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[455]
    flux_R446 = S110*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[456]
    flux_R447 = S111*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti1));  // w[457]
    flux_R448 = S112*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_Rmulti2));  // w[458]
    flux_R449 = S113*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[459]
    flux_R450 = S114*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_Rmulti2));  // w[460]
    flux_R451 = S115*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[461]
    flux_R452 = S116*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_Rmulti2));  // w[462]
    flux_R453 = S117*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[463]
    flux_R454 = S118*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_Rmulti2));  // w[464]
    flux_R455 = S119*std::exp(-Ea_RG + (1 - phi)*(Gf_RG + Gf_RGS + Gf_Rmulti2));  // w[465]
    flux_R456 = S108*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[466]
    flux_R457 = S109*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[467]
    flux_R458 = S112*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[468]
    flux_R459 = S113*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[469]
    flux_R460 = S114*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[470]
    flux_R461 = S115*std::exp(-Ea_RSh + (1 - phi)*(Gf_RSh + Gf_RShP + Gf_Rmulti2));  // w[471]
    flux_R462 = S110*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[472]
    flux_R463 = S111*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[473]
    flux_R464 = S116*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[474]
    flux_R465 = S117*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[475]
    flux_R466 = S118*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[476]
    flux_R467 = S119*std::exp(-Ea_RPL + (1 - phi)*(Gf_RPL + Gf_RPLP + Gf_Rmulti3));  // w[477]
}

} // namespace model_Step5_SA
} // namespace amici
